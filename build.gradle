buildscript {
	ext {
		springBootVersion = '2.3.3.RELEASE'
		springBootManagementPlugin = '1.0.10.RELEASE'
	}
	repositories {
		mavenCentral()
	}

	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
		classpath "io.spring.gradle:dependency-management-plugin:${springBootManagementPlugin}"
	}
}


apply plugin: 'java'
apply plugin: 'idea'
apply plugin: 'eclipse'
apply plugin: 'jacoco'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'


group = 'org.paasta.container.platform.common.api'
sourceCompatibility = '1.8'


configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}


ext {
	springIoPlatformVersion = 'Cairo-SR8'
	mysqlConnectorJavaVersion = '8.0.21'
	lombokVersion = '1.18.12'
	jacocoVersion = '0.8.5'
	swaggerVersion = '2.9.2'
}

dependencyManagement {
	imports {
		mavenBom "io.spring.platform:platform-bom:${springIoPlatformVersion}"
	}
}

jar {
	archivesBaseName = 'paas-ta-container-platform-common-api'
}

dependencies {
	compile ('org.springframework.boot:spring-boot-starter-security')
	compile "org.springframework.boot:spring-boot-starter-web"
	compile "org.springframework.boot:spring-boot-starter-aop"
	compile "org.springframework.boot:spring-boot-starter-data-jpa"
	compile "org.springframework.boot:spring-boot-starter-jdbc"
	compileOnly "org.projectlombok:lombok:${lombokVersion}"
	annotationProcessor "org.projectlombok:lombok:${lombokVersion}"
	runtime "mysql:mysql-connector-java:${mysqlConnectorJavaVersion}"
	compile "io.springfox:springfox-swagger2:${swaggerVersion}"
	compile "io.springfox:springfox-swagger-ui:${swaggerVersion}"

	testCompile "org.springframework.boot:spring-boot-starter-test"
}

jacoco {
	toolVersion = "${jacocoVersion}"
}

test {
	ignoreFailures=true
	jacoco {
		destinationFile = file("$buildDir/jacoco/jacoco-overall.exec")
	}
}